package com.rpgcornerteam.rpgcorner.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PurchaseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPurchaseAllPropertiesEquals(Purchase expected, Purchase actual) {
        assertPurchaseAutoGeneratedPropertiesEquals(expected, actual);
        assertPurchaseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPurchaseAllUpdatablePropertiesEquals(Purchase expected, Purchase actual) {
        assertPurchaseUpdatableFieldsEquals(expected, actual);
        assertPurchaseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPurchaseAutoGeneratedPropertiesEquals(Purchase expected, Purchase actual) {
        assertThat(expected)
            .as("Verify Purchase auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPurchaseUpdatableFieldsEquals(Purchase expected, Purchase actual) {
        assertThat(expected)
            .as("Verify Purchase relevant properties")
            .satisfies(e -> assertThat(e.getPurchaseDate()).as("check purchaseDate").isEqualTo(actual.getPurchaseDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPurchaseUpdatableRelationshipsEquals(Purchase expected, Purchase actual) {
        assertThat(expected)
            .as("Verify Purchase relationships")
            .satisfies(e ->
                assertThat(e.getPurchasedFromSupplier()).as("check purchasedFromSupplier").isEqualTo(actual.getPurchasedFromSupplier())
            );
    }
}
