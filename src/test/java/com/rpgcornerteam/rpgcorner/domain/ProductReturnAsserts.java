package com.rpgcornerteam.rpgcorner.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductReturnAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductReturnAllPropertiesEquals(ProductReturn expected, ProductReturn actual) {
        assertProductReturnAutoGeneratedPropertiesEquals(expected, actual);
        assertProductReturnAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductReturnAllUpdatablePropertiesEquals(ProductReturn expected, ProductReturn actual) {
        assertProductReturnUpdatableFieldsEquals(expected, actual);
        assertProductReturnUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductReturnAutoGeneratedPropertiesEquals(ProductReturn expected, ProductReturn actual) {
        assertThat(expected)
            .as("Verify ProductReturn auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductReturnUpdatableFieldsEquals(ProductReturn expected, ProductReturn actual) {
        assertThat(expected)
            .as("Verify ProductReturn relevant properties")
            .satisfies(e -> assertThat(e.getReturnDate()).as("check returnDate").isEqualTo(actual.getReturnDate()))
            .satisfies(e -> assertThat(e.getNote()).as("check note").isEqualTo(actual.getNote()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductReturnUpdatableRelationshipsEquals(ProductReturn expected, ProductReturn actual) {
        assertThat(expected)
            .as("Verify ProductReturn relationships")
            .satisfies(e -> assertThat(e.getSale()).as("check sale").isEqualTo(actual.getSale()))
            .satisfies(e -> assertThat(e.getReturnedByCustomer()).as("check returnedByCustomer").isEqualTo(actual.getReturnedByCustomer()));
    }
}
